<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hpw.dao.mapper.NormalMailRecordPOMapper">
  <resultMap id="BaseResultMap" type="com.hpw.bean.NormalMailRecordPO">
    
    <!--======= 邮件id =========-->
    <id column="id" jdbcType="BIGINT" property="id" />
    
    <!--======= 发送方用户id =========-->
    <result column="sender_id" jdbcType="BIGINT" property="senderId" />
    
    <!--======= 接收方用户id =========-->
    <result column="receiver_id" jdbcType="BIGINT" property="receiverId" />
    
    <!--======= 邮件是否已读 0未读 1已读 =========-->
    <result column="read" jdbcType="BIT" property="read" />
    
    <!--======= 附件状态 0无附件 1有附件未领取 2有附件已领取 =========-->
    <result column="attachment_state" jdbcType="INTEGER" property="attachmentState" />
    
    <!--======= 附件内容格式 [[游戏id， 道具id， 道具类型，道具数量], ...]；默认值 empty string =========-->
    <result column="attachment_content_format" jdbcType="VARCHAR" property="attachmentContentFormat" />
    
    <!--======= 邮件类型 1系统 2玩家 =========-->
    <result column="mail_type" jdbcType="INTEGER" property="mailType" />
    
    <!--======= 内容类型 =========-->
    <result column="content_type" jdbcType="INTEGER" property="contentType" />
    
    <!--======= 对格式化字符串的填充内容, 以 ; 分割；默认值 empty string =========-->
    <result column="content_args" jdbcType="VARCHAR" property="contentArgs" />
    
    <!--======= 内容，用于 mail_type = 2 ; 默认值 empty string =========-->
    <result column="content" jdbcType="VARCHAR" property="content" />
    
    <!--======= 发送时间 =========-->
    <result column="sending_time" jdbcType="BIGINT" property="sendingTime" />
    
    <!--======= 是否删除 =========-->
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
    tableName: c_normal_mail_record
    -->
    `id`,`sender_id`,`receiver_id`,`read`,`attachment_state`,`attachment_content_format`,
    `mail_type`,`content_type`,`content_args`,`content`,`sending_time`,`deleted`
  </sql>

  <!-- ### 以上代码由MBG + CommentPlugin自动生成, 生成时间: 2020-07-26 17:16:30 ### -->

  <!-- Your codes goes here!!! -->

  <select id="getRecordListByUserId" resultMap="BaseResultMap">
    SELECT
      <include refid="Base_Column_List"/>
    FROM
      c_normal_mail_record
    WHERE
      <choose>
        <when test="isSender">
          `sender_id` = #{userId}
        </when>
        <otherwise>
          `receiver_id` = #{userId}
        </otherwise>
      </choose>
  </select>

  <insert id="addRecord">
    INSERT INTO c_normal_mail_record
    ( `id`,`sender_id`,`receiver_id`,`read`,`attachment_state`,
      <if test="record.attachmentContentFormat != null">
        `attachment_content_format`,
      </if>
      `mail_type`,
      <if test="record.contentType != null">
        `content_type`,
      </if>
      <if test="record.contentArgs != null">
        `content_args`,
      </if>
      <if test="record.content != null">
        `content`,
      </if>
      `sending_time`,`deleted` )
    VALUES
    ( #{record.id}, #{record.senderId}, #{record.receiverId}, #{record.read}, #{record.attachmentState},
      <if test="record.attachmentContentFormat != null">
        #{record.attachmentContentFormat},
      </if>
        #{record.mailType},
      <if test="record.contentType != null">
        #{record.contentType},
      </if>
      <if test="record.contentArgs != null">
        #{record.contentArgs},
      </if>
      <if test="record.content != null">
        #{record.content},
      </if>
    #{record.sendingTime}, #{record.deleted} )
  </insert>

  <update id="updateRecordList">
    <foreach collection="poList" separator=";" item="item">
      UPDATE c_normal_mail_record
      <set>
        <if test="item.read != null">
          `read` = #{item.read},
        </if>
        <if test="item.attachmentState">
          `attachment_state` = #{item.attachmentState},
        </if>
      </set>
      WHERE `receiver_id` = #{item.receiverId} and `broadcast_mail_id` = #{item.broadcastMailId}
    </foreach>
  </update>

  <update id="logicDeleteByIdList">
    <foreach collection="poList" separator=";" item="item">
      UPDATE c_normal_mail_record
      <set>
          `deleted` = #{item.deleted}
      </set>
      WHERE `id` = #{item.id} and `receiver_id` = #{item.receiverId}
    </foreach>
  </update>
  
</mapper>